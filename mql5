mql5
//+------------------------------------------------------------------+
//|                                           British Fakeout.mq5   |
//|                    Copyright 2022, Forex Robot Easy Team         |
//|                                             forexroboteasy.com  |
//+------------------------------------------------------------------+

//--- Input parameters
input double LotSize = 0.01; // default lot size

input int RiskTolerance = 1; // default risk tolerance level
input ENUM_CALCULATION_METHOD LotCalculationMethod = CALCULATION_FIXED; // default lot calculation method
input double EquityBasedRatio = 0.5; // default equity based ratio
input int GridDistance = 20; // default grid distance

//--- Expert Advisor initialization function
int OnInit()
{
   //--- Set initial lot size based on risk tolerance level
   double lotSize = CalculateLotSize(LotCalculationMethod, RiskTolerance);

   //--- Open initial position
   bool result = OpenPosition(Symbol(), OP_BUY, lotSize);

   if (result)
   {
      //--- Calculate the distance between opened lots using the grid distance option
      double distance = GridDistance * SymbolInfoDouble(Symbol(), SYMBOL_POINT);

      //--- Open additional positions based on the grid distance
      for (int i = 1; i < 5; i++)
      {
         double positionPrice = (i * distance) + PositionGetDouble(POSITION_PRICE_OPEN);
         result = OpenPosition(Symbol(), OP_BUY, lotSize, positionPrice);
         if (!result)
         {
            Print('Failed to open position ', i + 1);
         }
      }
   }
   else
   {
      Print('Failed to open initial position');
   }

   return(INIT_SUCCEEDED);
}

//--- Expert Advisor tick function
void OnTick()
{
   //--- Place your tick processing logic here
}

//--- Function to calculate lot size based on risk tolerance level and lot calculation method
double CalculateLotSize(ENUM_CALCULATION_METHOD method, int riskTolerance)
{
   double lotSize = 0.0;

   if (method == CALCULATION_FIXED)
   {
      lotSize = LotSize;
   }
   else if (method == CALCULATION_MARTINGALE)
   {
      lotSize = LotSize * MathPow(2, riskTolerance);
   }
   else if (method == CALCULATION_EQUITY_BASED)
   {
      double equity = AccountInfoDouble(ACCOUNT_EQUITY);
      double freeMargin = AccountInfoDouble(ACCOUNT_FREEMARGIN);
      double riskRatio = EquityBasedRatio * freeMargin / equity;
      lotSize = riskRatio * LotSize;
   }

   return(lotSize);
}

//--- Function to open a position
bool OpenPosition(string symbol, int type, double volume, double price = 0.0, double sl = 0.0, double tp = 0.0)
{
   MqlTradeRequest request;
   MqlTradeResult result;

   request.action = TRADE_ACTION_DEAL;
   request.symbol = symbol;
   request.type = type;
   request.volume = volume;
   request.price = price;
   request.sl = sl;
   request.tp = tp;
   request.deviation = 0;
   request.type_filling = ORDER_FILLING_RETURN;
   request.magic = 0;
   request.expiration = 0;

   bool result = OrderSend(request, result);

   return(result);
}
